
regex("[0-9][0-9]*(\.[0-9][0-9]*(\.[0-9][0-9]*){0,1}){0,1}")
regex("[0-9]{1,}", required=False)
list(include("note"), required=False)
regex("^[a-z0-9\-]{1,30}$", name="account alias")
regex("^[a-z0-9\-_ ]{1,60}$", name="organization's account name", required=False)
bool(required=False)
int(min=1, max=2)
enum("eu-west-1")
bool(required=False)
regex('.*@.*\..*$', name='email address')
list(include("cloudtrail_data_resource"), required=False)
list(include("networking_region"), min=1)
include("route53", required=False)
list(include("custom_ami"), required=False)
enum("dev", "test", "uat", "prod")
enum("CSO", "CBO", "CTO", "CIB", "WIMI", "RBB", "ARO", "FTECH", "IS", "Test")
regex('.*@.*\..*$', name='email address')
regex("^[a-z0-9_]{1,20}$", name="owner code")
str(required=False)
str(required=False)
regex("[0-9]{6}")
str()
regex('.*@.*\..*$', name='email address')
str()
str()
any(enum("None"), regex("SCTASK[0-9]{7,7}"))
list(include("team"), min=1, required=False)
str(required=False)
str()
list(str(), min=1)
list(include("local_zone"), min=1, required=False)
list(include("global_zone"), min=1, required=False)
regex("^.*\.$", name="zone name")
map(str())
list(str(), min=1)
regex("^.*\.$", name="zone name")
list(str(), min=1)
enum("Internal Only")
regex("^[a-z0-9-]{1,128}_$")
bool()
enum("linux", "linux-billing", "windows-billing")
regex("^[a-z0-9_]{1,30}$", required=False)
enum("eu-west-1", "us-west-2", "af-south-1", "us-east-1", "eu-central-1")
list(include("vpc"), required=False)
list(include("private_link"), min=1, required=False)
include("networking_regional_features", required=False)
bool(required=False)
str(max=20)
regex("^com.amazonaws.vpce.[a-z0-9\-]*.vpce-svc-[a-z0-9\-]+$", name="privatelink service name created by client", required=False)
list(str(), min=1, required=False)
regex("^arn:aws:elasticloadbalancing:[a-z0-9\-]*:[0-9]*:targetgroup/[a-z0-9\-]*/[a-z0-9\-]+$", name="private link nlb target group arn", required=False)
str()
list(regex("[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}"))
list(str(), min=1)
str(max=20)
regex("[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}")
include("subnet_type", required=False)
include("networking_vpc_features", required=False)
enum("app", "data", required=False)
bool(required=False)
enum("default", "dedicated", required=False)
bool(required=False)
map(include("subnet"))
list(include("nacl"), required=False)
list(include("cidr"))
regex("[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}")
bool()
enum("tcp", "udp", -1)
int(min=100, max=32000)
enum("allow", "deny")
int(min=0, max=65535)
int(min=0, max=65535)
regex("[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}")
enum("a", "b", "c", "d", "e", "f", required=False)
regex("^[a-z0-9_]{1,20}$", name="team code")
regex('.*@.*\..*$', name='email address')
str()
regex("[0-9]{6}")
any(enum("None"), regex("SCTASK[0-9]{7,7}"), required=True)
bool(required=False)
include("iam", required=False)
list(str(), min=1, required=False)
bool(required=False)
list(str(), min=1, required=False)
enum("Deny", "Allow", required=False)
enum("Deny","Allow", required=False)